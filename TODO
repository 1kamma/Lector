TODO
    Options:
        ✓ Automatic library management
            ✓ Recursive file addition
            ✓ Auto deletion
        ✓ Remember files
        ✓ Check files (hashes) upon restart
        ✓ Draw shadows
        ✓ Perform culling
    Library:
        ✓ sqlite3 for cover images cache
        ✓ sqlite3 for storing metadata
        ✓ Drop down for SortBy
        ✓ Image delegates
        ✓ Image reflow
        ✓ Search bar in toolbar
        ✓ Shift focus to the tab that has the book open
        ✓ Tie file deletion and tab closing to model updates
        ✓ Create separate thread for parser - Show progress in main window
        ✓ Memory management
        ✓ Mass tagging
        ✓ Add capability to sort by new
        Table view
        Ignore a / the / numbers for sorting purposes
        Information dialog widget
        Context menu: Cache, Read, Edit database, delete, Mark read/unread
        Set focus to newly added file
        Allow editing of database data through the UI + for Bookmarks
    Reading:
        ✓ Drop down for TOC
        ✓ Override the keypress event of the textedit
        ✓ Use format* icons for toolbar buttons
        ✓ Implement book view settings with a(nother) toolbar
        ✓ Substitute textedit for another widget
        ✓ Theming
        ✓ Keep fontsize and margins consistent - Let page increase in length
        ✓ Fullscreening
        ✓ Remember open tabs
        ✓ Selectable background color for QGraphicsView
        ✓ View modes for QGraphicsView
        ✓ View and hide toolbar actions in a list
        ✓ Line spacing
        ✓ Record progress
        ✓ Text alignment
        Bookmarks
            ✓ Creation
            ✓ Navigation
            Editing: Name, Location
            Deletion
        Set context menu for definitions and the like
        Search document using QTextCursor?
        Cache multiple images
        Comic view keyboard shortcuts
        Comic view modes
            Continuous paging
            Double pages
    Filetypes:
        ✓ cbz, cbr support
            ✓ Keep font settings enabled but only for background color
            Cache next and previous images
        epub support
        mobi, azw support
    Other:
        ✓ Define every widget in code
    Bugs:
        If there are files open and the database is deleted, TypeErrors result
        Closing a fullscreened contentView does not save settings
    
    Secondary:
        Annotations
        Graphical themes
        Goodreads API: Ratings, Read, Recommendations
        Get ISBN using python-isbnlib
        Pagination
        Use embedded fonts
        Scrolling: Smooth / By Line
        ? Add only one file type if multiple are present
        Shift to logging instead of print statements
        ? Plugin system for parsers
        ? pdf support
        ? Create emblem per filetype
        txt, doc, chm, djvu, fb2 support
        Include icons for filetype emblems
        Drag and drop support for the library
        Leave comic images on disk in case tab isn't closed and files are remembered